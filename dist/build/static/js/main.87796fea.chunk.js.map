{"version":3,"sources":["context/userContext.ts","interfaces/user.ts","repository/utils.ts","api/axiosPrivate.ts","pages/ContactForm.tsx","pages/ContactList.tsx","pages/ContactManagerApp.tsx","api/axiosPublic.ts","components/Login.tsx","pages/LaunchCard.tsx","pages/Register.tsx","components/AuthRoute.tsx","App.tsx","index.tsx"],"names":["initialUserState","username","accessToken","isLoggedIn","UserReducer","state","action","payload","type","UserContext","createContext","userState","userDispatch","UserContextProvider","Consumer","Provider","defaultPosition","toast","POSITION","BOTTOM_CENTER","showToast","msg","autoClose","className","position","success","error","useAxiosPrivate","userContext","useContext","axios","create","headers","Authorization","withCredentials","ContactForm","url","process","navigate","useNavigate","axiosInstance","handleFormSubmit","e","preventDefault","formData","FormData","target","post","setTimeout","message","Box","component","encType","onSubmit","style","margin","width","marginTop","FormControl","required","TextField","id","name","label","placeholder","maxRows","sx","marginBottom","multiline","Button","variant","ContactList","useState","data","setData","columns","title","field","editComponent","rowData","alt","accept","onChange","event","file","files","imgTag","document","getElementById","reader","FileReader","onloadend","src","result","readAsDataURL","err","console","log","render","startsWith","getData","useCallback","get","fetchedDataReq","fetchedData","reverse","useEffect","onAdd","newData","length","email","match","phone","toString","onUpdate","oldData","put","_id","onDelete","contact","delete","options","actionsColumnIndex","addRowPosition","editable","onRowAdd","onRowUpdate","onRowDelete","drawerWidth","Main","styled","shouldForwardProp","prop","theme","open","flexGrow","padding","spacing","transition","transitions","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","AppBar","MuiAppBar","DrawerHeader","display","alignItems","mixins","toolbar","justifyContent","ContactManagerApp","React","setOpen","useTheme","CssBaseline","Toolbar","IconButton","color","onClick","edge","marginRight","Typography","noWrap","Drawer","flexShrink","boxSizing","anchor","direction","Divider","List","ListItem","Link","to","ListItemIcon","ListItemText","primary","baseUrl","axiosPublic","baseURL","Login","handleLogin","form","currentTarget","postFormData","forEach","value","key","password","resp","token","autoComplete","LaunchCard","Card","CardMedia","height","image","CardContent","gutterBottom","textTransform","fontSize","CardActions","Register","useLocation","handleRegister","postData","confirmPassword","status","path","AuthRoute","props","location","children","from","replace","App","useReducer","element","ReactDOM"],"mappings":"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","file":"static/js/main.87796fea.chunk.js","sourcesContent":["import { defaultAccessToken } from \"../interfaces/user\";\nimport { Dispatch, createContext } from \"react\";\n\ninterface ILoginState {\n  username: string;\n  accessToken: string;\n  isLoggedIn: boolean;\n  // persist?: boolean;\n}\n\ninterface ILoginAction {\n  type: \"login\" | \"logout\";\n  payload: { username: string; accessToken: string; isLoggedIn: boolean };\n}\n\ninterface IUserContext {\n  userState: ILoginState;\n  userDispatch: Dispatch<ILoginAction>;\n}\n\nexport const initialUserState: ILoginState = {\n  username: \"\",\n  accessToken: defaultAccessToken,\n  isLoggedIn: false,\n};\n\nexport const UserReducer = (state: ILoginState, action: ILoginAction) => {\n  let { username, accessToken, isLoggedIn } = action.payload;\n\n  switch (action.type) {\n    case \"login\":\n      return { username, accessToken, isLoggedIn };\n    case \"logout\":\n      return initialUserState;\n    default:\n      return state;\n  }\n};\n\nexport const UserContext = createContext<IUserContext>({\n  userState: initialUserState,\n  userDispatch: () => {},\n});\n\nexport const UserContextConsumer = UserContext.Consumer;\nexport const UserContextProvider = UserContext.Provider;\n","export interface IUser {\n  username: string;\n  email?: string;\n  phone?: number;\n  password: string;\n}\n\nexport const defaultUser: IUser = {\n  username: \"\",\n  email: \"\",\n  phone: 0,\n  password: \"\",\n};\n\nexport const defaultAccessToken = \"\";\n","import { toast } from \"react-toastify\";\nconst defaultPosition = toast.POSITION.BOTTOM_CENTER;\n\n/**\n * Show Toast\n *\n * Display toast\n *\n * @param {string} type message type, success/error\n * @param {string} msg toast message\n * @param {integer} autoClose auto close value in millisecond\n * @param {string} className toaster class name\n * @param {string} position toast position; ex-'top-right', 'top-center', 'top-left', 'bottom-right', 'bottom-center', 'bottom-left'\n */\n\nexport const showToast = (\n  type = \"success\",\n  msg: string,\n  autoClose = 2000,\n  className = \"primaryColor\",\n  position = defaultPosition\n) => {\n  if (type === \"success\") {\n    toast.success(msg, {\n      autoClose: autoClose === null ? 2000 : autoClose,\n      className: className === null ? \"primaryColor\" : className,\n      position: position,\n    });\n  } else if (type === \"error\") {\n    toast.error(msg, {\n      autoClose: autoClose === null ? 2000 : autoClose,\n      className: className === null ? \"dangerColor\" : className,\n      position: position,\n    });\n  }\n};\n\n// How to use react-toastify\n","import axios from \"axios\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../context/userContext\";\n/* \nconst baseUrl = `${process.env.REACT_APP_URL}`; */\n\nconst useAxiosPrivate = () => {\n  const userContext = useContext(UserContext);\n  const axiosPrivate = axios.create({\n    /*    baseURL: baseUrl, */\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `${userContext.userState.accessToken}`,\n    },\n    withCredentials: true,\n  });\n  return axiosPrivate;\n};\n\nexport default useAxiosPrivate;\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport FormControl from \"@mui/material/FormControl\";\nimport { useNavigate } from \"react-router-dom\";\nimport TextField from \"@mui/material/TextField\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport { showToast } from \"../repository/utils\";\nimport { AxiosError } from \"axios\";\nimport useAxiosPrivate from \"../api/axiosPrivate\";\nimport { IContactFormData } from \"../interfaces/contact\";\n\nexport const ContactForm = () => {\n  const url = `${process.env.REACT_APP_URL}/contacts`;\n  const navigate = useNavigate();\n  const axiosInstance = useAxiosPrivate();\n\n  const handleFormSubmit = async (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const formData = new FormData(e.target);\n\n    try {\n      let resp = await axiosInstance.post(url, formData as IContactFormData);\n\n      if (resp) {\n        showToast(\"success\", `Contact will be added.`);\n\n        setTimeout(() => {\n          navigate(\"/list\");\n        }, 2000);\n      }\n    } catch (err) {\n      const error = err as AxiosError;\n      showToast(\"error\", error.message);\n    }\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      encType=\"multipart/form-data\"\n      onSubmit={handleFormSubmit}\n      style={{ margin: \"0 auto\", width: \"500px\", marginTop: \"100px\" }}\n    >\n      <FormControl required>\n        <TextField\n          type=\"text\"\n          id=\"Name\"\n          name=\"name\"\n          label=\"Name\"\n          placeholder=\"Name\"\n          maxRows=\"1\"\n          required\n          sx={{ marginBottom: 3 }}\n        />\n        <TextField\n          type=\"email\"\n          id=\"Email\"\n          name=\"email\"\n          label=\"Email\"\n          placeholder=\"Email\"\n          maxRows=\"1\"\n          required\n          sx={{ marginBottom: 3 }}\n        />\n        <TextField\n          type=\"tel\"\n          id=\"phone\"\n          name=\"phone\"\n          label=\"phone\"\n          placeholder=\"phone\"\n          maxRows=\"1\"\n          required\n          sx={{ marginBottom: 3 }}\n        />\n        <TextField\n          type=\"file\"\n          id=\"File\"\n          name=\"file\"\n          maxRows=\"1\"\n          required\n          sx={{ marginBottom: 3 }}\n        />\n        <TextField\n          type=\"message\"\n          id=\"Message\"\n          name=\"message\"\n          label=\"Message\"\n          placeholder=\"Message\"\n          sx={{ marginBottom: 3 }}\n          required\n          multiline\n        />\n\n        <Button type=\"submit\" variant=\"outlined\">\n          Submit\n        </Button>\n      </FormControl>\n      <ToastContainer />\n    </Box>\n  );\n};\n","import useAxiosPrivate from \"../api/axiosPrivate\";\nimport MaterialTable, {\n  Column,\n  EditComponentProps,\n} from \"@material-table/core\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport { IContact, IContactFormData } from \"../interfaces/contact\";\nimport { showToast } from \"../repository/utils\";\nimport axios from \"axios\";\nimport { UserContext } from \"../context/userContext\";\n\nexport const ContactList = () => {\n  const url = `${process.env.REACT_APP_URL}/contacts`;\n  const axiosInstance = useAxiosPrivate();\n  const userContext = useContext(UserContext);\n  const [data, setData] = useState<IContact[]>([]);\n  //const [_file, setFile] = useState<React.ReactNode>();\n\n  const columns: Array<Column<any>> = [\n    {\n      title: \"file\",\n      field: \"file\",\n\n      editComponent: (rowData: EditComponentProps<IContact>) => (\n        <div>\n          <img alt=\"\" id=\"input-img\" width=\"45\" />\n          <input\n            type=\"file\"\n            id=\"File\"\n            name=\"file\"\n            accept=\"image/*\"\n            onChange={(event: any) => {\n              try {\n                const file = event.target.files[0];\n                let imgTag = document.getElementById(\n                  \"input-img\"\n                ) as HTMLImageElement;\n\n                const reader = new FileReader();\n                reader.onloadend = () => {\n                  imgTag.src = `${reader.result}`;\n                  rowData.rowData.file = imgTag.src;\n                };\n                reader.readAsDataURL(file);\n              } catch (err) {\n                console.log(err);\n              }\n            }}\n          />\n        </div>\n      ),\n      render: (rowData: IContact) => (\n        <img\n          src={\n            rowData.file?.startsWith(\"data:image/\")\n              ? `${rowData.file}`\n              : `data:image/jpg;base64,${rowData.file}`\n          }\n          width=\"45\"\n          alt=\"contact\"\n        />\n      ),\n    },\n    {\n      title: \"name\",\n      field: \"name\",\n    },\n    {\n      title: \"email\",\n      field: \"email\",\n    },\n    {\n      title: \"phone\",\n      field: \"phone\",\n    },\n    {\n      title: \"message\",\n      field: \"message\",\n    },\n  ];\n\n  const getData = useCallback(async () => {\n    let fetchedDataReq = await axios.get(url, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `${userContext.userState.accessToken}`,\n      },\n      withCredentials: true,\n    });\n\n    if (fetchedDataReq) {\n      let fetchedData = await fetchedDataReq[\"data\"];\n\n      setData(fetchedData.reverse());\n    } else {\n      console.log(\"Error while getting data\");\n    }\n  }, [url, userContext.userState.accessToken]);\n\n  useEffect(() => {\n    getData();\n  }, [getData]);\n\n  const onAdd = async (newData: IContactFormData) => {\n    try {\n      if (newData.name.length > 2) {\n        if (\n          newData.email.match(/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/)\n        ) {\n          if (newData.message.length > 4) {\n            if (newData.phone.toString().length > 5) {\n              let resp = await axiosInstance.post(url, newData);\n\n              if (resp) {\n                showToast(\"success\", `${newData.name} was added `);\n                return await getData();\n              }\n            } else {\n              showToast(\"error\", \"phone must be at least 5 characters\");\n            }\n          } else {\n            showToast(\"error\", \"Message must be at least 4 characters\");\n          }\n        } else {\n          showToast(\"error\", 'Email must include \"@\"');\n        }\n      } else {\n        showToast(\"error\", \"Name bust be longer than 2 characters\");\n      }\n    } catch {\n      showToast(\"error\", `${newData.name} was not added`);\n    }\n  };\n\n  const onUpdate = async (newData: IContact, oldData: any) => {\n    try {\n      if (newData.name.length > 2) {\n        if (\n          newData.email.match(/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/)\n        ) {\n          if (newData.phone.toString().length > 5) {\n            if (newData.message.length > 4) {\n              let resp = await axiosInstance.put(\n                url + \"/\" + oldData._id,\n                newData as IContact\n              );\n              if (resp) {\n                await getData();\n                showToast(\"success\", `${newData.name} was updated `);\n              }\n            } else {\n              showToast(\"error\", \"Message must be at least 4 characters\");\n            }\n          } else {\n            showToast(\"error\", \"Phone must be at least 5 characters\");\n          }\n        } else {\n          showToast(\"error\", \"A proper mail must be given\");\n        }\n      } else {\n        showToast(\"error\", \"Name must be longer than 2 characters\");\n      }\n    } catch {\n      showToast(\"error\", `${oldData.name} was not updated`);\n    }\n  };\n\n  const onDelete = async (contact: IContact) => {\n    try {\n      let resp = await axiosInstance.delete(url + \"/\" + contact._id);\n\n      if (resp) {\n        showToast(\"success\", `${contact.name} was deleted`);\n        await getData();\n      }\n    } catch {\n      showToast(\"error\", `${contact.name} was not deleted`);\n    }\n  };\n\n  return (\n    <div>\n      <MaterialTable\n        title=\"Contact List\"\n        columns={columns}\n        data={data}\n        options={{ actionsColumnIndex: -1, addRowPosition: \"first\" }}\n        editable={{\n          onRowAdd: onAdd,\n          onRowUpdate: onUpdate,\n          onRowDelete: onDelete,\n        }}\n      />\n      <ToastContainer />\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { styled, useTheme } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Drawer from \"@mui/material/Drawer\";\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport List from \"@mui/material/List\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Button from \"@mui/material/Button\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport InboxIcon from \"@mui/icons-material/MoveToInbox\";\nimport { ToastContainer } from \"react-toastify\";\nimport { showToast } from \"../repository/utils\";\nimport { UserContext } from \"../context/userContext\";\nimport { useContext } from \"react\";\n\nconst drawerWidth = 240;\n\nconst Main = styled(\"main\", { shouldForwardProp: (prop) => prop !== \"open\" })<{\n  open?: boolean;\n}>(({ theme, open }) => ({\n  flexGrow: 1,\n  padding: theme.spacing(3),\n  transition: theme.transitions.create(\"margin\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  marginLeft: `-${drawerWidth}px`,\n  ...(open && {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  }),\n}));\n\ninterface AppBarProps extends MuiAppBarProps {\n  open?: boolean;\n}\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})<AppBarProps>(({ theme, open }) => ({\n  transition: theme.transitions.create([\"margin\", \"width\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: `${drawerWidth}px`,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n  justifyContent: \"flex-end\",\n}));\n\nexport default function ContactManagerApp() {\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const userContext = useContext(UserContext);\n\n  const Logout = () => {\n    showToast(\"success\", \"You are logged out\");\n    setTimeout(() => {\n      userContext.userDispatch({\n        type: \"logout\",\n        payload: {\n          username: \"\",\n          accessToken: \"\",\n          isLoggedIn: false,\n        },\n      });\n    }, 2000);\n  };\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  return (\n    <>\n      <Box sx={{ display: \"flex\" }}>\n        <CssBaseline />\n        <AppBar position=\"fixed\" open={open}>\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              sx={{\n                marginRight: \"36px\",\n                ...(open && { display: \"none\" }),\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              variant=\"h6\"\n              noWrap\n              component=\"div\"\n              sx={{ flexGrow: 1 }}\n            >\n              Contact Manager\n            </Typography>\n\n            <Button color=\"inherit\" onClick={Logout}>\n              Log Out\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          sx={{\n            width: drawerWidth,\n            flexShrink: 0,\n            \"& .MuiDrawer-paper\": {\n              width: drawerWidth,\n              boxSizing: \"border-box\",\n            },\n          }}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n        >\n          <DrawerHeader>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === \"rtl\" ? (\n                <ChevronRightIcon />\n              ) : (\n                <ChevronLeftIcon />\n              )}\n            </IconButton>\n          </DrawerHeader>\n          <Divider />\n          <List>\n            <ListItem component={Link} to=\"/form\" key=\"formItem\">\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Contact Form\" />\n            </ListItem>\n            <ListItem component={Link} to=\"/list\" key=\"listItem\">\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Contact List\" />\n            </ListItem>\n          </List>\n        </Drawer>\n\n        <Main open={open}>\n          <DrawerHeader />\n        </Main>\n      </Box>\n      <ToastContainer />\n    </>\n  );\n}\n","import axios from \"axios\";\n\nconst baseUrl = `${process.env.REACT_APP_URL}`;\n\nconst axiosPublic = axios.create({\n  baseURL: baseUrl,\n  headers: { \"Content-Type\": \"application/json\" },\n});\n\nexport default axiosPublic;\n","import Button from \"@mui/material/Button\";\nimport FormControl from \"@mui/material/FormControl\";\nimport { useNavigate } from \"react-router-dom\";\nimport TextField from \"@mui/material/TextField\";\nimport { ToastContainer } from \"react-toastify\";\nimport { showToast } from \"../repository/utils\";\nimport axiosPublic from \"../api/axiosPublic\";\nimport React, { useContext } from \"react\";\nimport { UserContext } from \"../context/userContext\";\nimport { AxiosError } from \"axios\";\n\nconst url = `${process.env.REACT_APP_URL}/users`;\n\nconst Login = () => {\n  const userContext = useContext(UserContext);\n  let navigate = useNavigate();\n\n  const handleLogin = async (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const formData = new FormData(form);\n    let postFormData = {} as any;\n    formData.forEach((value, key) => {\n      postFormData[key] = value;\n    });\n\n    try {\n      let resp = await axiosPublic.post(`${url}/login`, {\n        username: postFormData.username,\n        password: postFormData.password,\n      });\n\n      if (resp) {\n        userContext.userDispatch({\n          type: \"login\",\n          payload: {\n            username: resp.data.username,\n            accessToken: resp.data.token,\n            isLoggedIn: true,\n          },\n        });\n\n        showToast(\"success\", \"You are logged in\");\n        setTimeout(() => {\n          navigate(\"/contactManagerApp\");\n        }, 1000);\n      }\n    } catch (err) {\n      const error = err as AxiosError;\n      showToast(\"error\", error.message);\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleLogin}>\n        <FormControl required>\n          <TextField\n            type=\"text\"\n            label=\"username\"\n            id=\"Username\"\n            name=\"username\"\n            placeholder=\"Name\"\n            maxRows=\"1\"\n            required\n            sx={{ marginBottom: 3 }}\n            autoComplete=\"off\"\n          />\n          <TextField\n            type=\"password\"\n            label=\"password\"\n            id=\"Password\"\n            name=\"password\"\n            placeholder=\"password\"\n            maxRows=\"1\"\n            required\n            sx={{ marginBottom: 3 }}\n            autoComplete=\"off\"\n          />{\" \"}\n          <span>\n            <Button type=\"submit\">Login</Button>\n          </span>\n        </FormControl>\n      </form>\n      <ToastContainer />\n    </>\n  );\n};\nexport default Login;\n","import Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { Link } from \"react-router-dom\";\n\nimport Login from \"../components/Login\";\n\nconst imageURL =\n  \"https://www.spirit-of-the-sea.com/fileadmin//user_upload/Slider/Home/3.jpg\";\n\nexport default function LaunchCard() {\n  return (\n    <Card>\n      <CardMedia component=\"img\" height=\"140\" image={imageURL} />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\n          Contact Manager\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          Welcome to the \"Contact-Manager\". If you are not already registered\n          please\n          <Button\n            component={Link}\n            to=\"/register\"\n            style={{ textTransform: \"none\", fontSize: \"1.2rem\" }}\n          >\n            register!\n          </Button>\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Login />\n        <br />\n\n        <br />\n      </CardActions>\n    </Card>\n  );\n}\n","import { AxiosError } from \"axios\";\nimport Button from \"@mui/material/Button\";\nimport FormControl from \"@mui/material/FormControl\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport TextField from \"@mui/material/TextField\";\nimport { ToastContainer } from \"react-toastify\";\nimport { IUser } from \"../interfaces/user\";\nimport { showToast } from \"../repository/utils\";\nimport axiosPublic from \"../api/axiosPublic\";\n\nconst url = `${process.env.REACT_APP_URL}/users`;\n\ntype StateType = {\n  path: string;\n};\n\nconst Register = () => {\n  const navigate = useNavigate();\n  const { state } = useLocation();\n\n  const handleRegister = async (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const formData = new FormData(e.currentTarget);\n\n    let postData = {} as any;\n    formData.forEach((value, key) => {\n      postData[key] = value;\n    });\n\n    if (postData.confirmPassword !== postData.password) {\n      showToast(\"error\", \"password don't match\");\n    }\n    try {\n      let resp = await axiosPublic.post(`${url}/register`, postData as IUser);\n      if (resp.status === 200) {\n        showToast(\"success\", `${postData[\"username\"]} is registered.`);\n        setTimeout(() => {\n          navigate((state as StateType)?.path || \"/login\");\n        }, 2000);\n      } else {\n        showToast(\"error\", \"username already exists\");\n      }\n    } catch (err) {\n      const error = err as Error | AxiosError;\n      showToast(\"error\", error.message);\n    }\n  };\n  return (\n    <>\n      <form\n        onSubmit={handleRegister}\n        style={{ margin: \"0 auto\", width: \"220px\", marginTop: \"100px\" }}\n      >\n        <FormControl required>\n          <TextField\n            label=\"username\"\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            placeholder=\"Name\"\n            maxRows=\"1\"\n            required\n            sx={{ marginBottom: 3 }}\n          />\n          <TextField\n            label=\"email\"\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            maxRows=\"1\"\n            required\n            sx={{ marginBottom: 3 }}\n          />\n          <TextField\n            label=\"phone\"\n            type=\"tel\"\n            id=\"phone\"\n            name=\"phone\"\n            placeholder=\"Phone\"\n            maxRows=\"1\"\n            required\n            sx={{ marginBottom: 3 }}\n          />\n          <TextField\n            label=\"password\"\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"password\"\n            maxRows=\"1\"\n            required\n            sx={{ marginBottom: 3 }}\n          />\n          <TextField\n            label=\"confirm password\"\n            type=\"password\"\n            id=\"confirm-password\"\n            name=\"confirmPassword\"\n            placeholder=\"confirm password\"\n            maxRows=\"1\"\n            required\n            sx={{ marginBottom: 3 }}\n          />\n          <span>\n            <Button type=\"submit\" id=\"submit\">\n              Register\n            </Button>\n          </span>\n        </FormControl>\n      </form>\n      <ToastContainer />\n    </>\n  );\n};\nexport default Register;\n","import React, { useContext } from \"react\";\nimport { Navigate, useLocation } from \"react-router-dom\";\nimport { UserContext } from \"../context/userContext\";\n\nexport interface IAuthRouteProps {\n  children: React.ReactNode;\n}\n\nconst AuthRoute = (props: IAuthRouteProps) => {\n  const userContext = useContext(UserContext);\n  const location = useLocation();\n  const { children } = props;\n  return userContext.userState.accessToken !== \"\" ? (\n    <>{children}</>\n  ) : (\n    <Navigate to=\"/\" state={{ from: location }} replace />\n  );\n};\n\nexport default AuthRoute;\n","import { useReducer } from \"react\";\nimport { Routes, Route, HashRouter } from \"react-router-dom\";\nimport {\n  initialUserState,\n  UserContextProvider,\n  UserReducer,\n} from \"./context/userContext\";\nimport { ContactForm } from \"./pages/ContactForm\";\nimport { ContactList } from \"./pages/ContactList\";\nimport ContactManagerApp from \"./pages/ContactManagerApp\";\nimport LaunchCard from \"./pages/LaunchCard\";\nimport Register from \"./pages/Register\";\nimport AuthRoute from \"./components/AuthRoute\";\n\nconst App = () => {\n  const [userState, userDispatch] = useReducer(UserReducer, initialUserState);\n  return (\n    <UserContextProvider value={{ userState, userDispatch }}>\n      <HashRouter>\n        <Routes>\n          {/* Public Routes */}\n          <Route path=\"/\" element={<LaunchCard />} />\n          <Route path=\"/register\" element={<Register />} />\n          <Route path=\"*\" element={<LaunchCard />} />\n\n          {/* Private Routes */}\n          <Route\n            path=\"/contactManagerApp\"\n            element={\n              <AuthRoute>\n                <ContactManagerApp />\n              </AuthRoute>\n            }\n          />\n\n          <Route\n            path=\"/form\"\n            element={\n              <AuthRoute>\n                <ContactForm />\n              </AuthRoute>\n            }\n          />\n\n          <Route\n            path=\"/list\"\n            element={\n              <AuthRoute>\n                <ContactList />\n              </AuthRoute>\n            }\n          />\n        </Routes>\n      </HashRouter>\n    </UserContextProvider>\n  );\n};\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}