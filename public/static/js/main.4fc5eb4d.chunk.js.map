{"version":3,"sources":["context/userContext.ts","interfaces/user.ts","repository/utils.ts","api/axiosPrivate.ts","pages/ContactForm.tsx","pages/ContactList.tsx","pages/ContactManagerApp.tsx","api/axiosPublic.ts","components/Login.tsx","pages/LaunchCard.tsx","pages/Register.tsx","components/AuthRoute.tsx","App.tsx","index.tsx"],"names":["initialUserState","username","accessToken","isLoggedIn","UserReducer","state","action","payload","type","UserContext","createContext","userState","userDispatch","UserContextProvider","Consumer","Provider","defaultPosition","toast","POSITION","BOTTOM_CENTER","showToast","msg","autoClose","className","position","success","error","baseUrl","process","useAxiosPrivate","userContext","useContext","axios","create","baseURL","headers","Authorization","withCredentials","ContactForm","url","navigate","useNavigate","axiosInstance","handleFormSubmit","e","a","preventDefault","formData","FormData","target","post","setTimeout","message","Box","component","encType","onSubmit","style","margin","width","marginTop","FormControl","required","TextField","id","name","label","placeholder","maxRows","sx","marginBottom","multiline","Button","variant","ContactList","useState","data","setData","columns","title","field","editComponent","rowData","alt","accept","onChange","event","inputTag","document","getElementById","file","files","imgTag","reader","FileReader","onloadend","src","result","readAsDataURL","console","log","err","render","startsWith","getData","useCallback","get","fetchedDataReq","fetchedData","reverse","useEffect","onAdd","newData","length","email","match","phone","toString","onUpdate","oldData","put","_id","onDelete","contact","delete","options","actionsColumnIndex","addRowPosition","editable","onRowAdd","onRowUpdate","onRowDelete","drawerWidth","Main","styled","shouldForwardProp","prop","theme","open","flexGrow","padding","spacing","transition","transitions","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","AppBar","MuiAppBar","DrawerHeader","display","alignItems","mixins","toolbar","justifyContent","ContactManagerApp","React","setOpen","useTheme","CssBaseline","Toolbar","IconButton","color","onClick","edge","marginRight","Typography","noWrap","Drawer","flexShrink","boxSizing","anchor","direction","Divider","List","ListItem","Link","to","ListItemIcon","ListItemText","primary","axiosPublic","Login","handleLogin","form","currentTarget","postFormData","forEach","value","key","password","resp","token","autoComplete","LaunchCard","Card","CardMedia","height","image","CardContent","gutterBottom","textTransform","fontSize","CardActions","Register","useLocation","handleRegister","postData","confirmPassword","status","path","AuthRoute","props","location","children","from","replace","App","useReducer","element","require","config","ReactDOM"],"mappings":"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","file":"static/js/main.4fc5eb4d.chunk.js","sourcesContent":["import { defaultAccessToken } from \"../interfaces/user\";\nimport { Dispatch, createContext } from \"react\";\n\ninterface ILoginState {\n  username: string;\n  accessToken: string;\n  isLoggedIn: boolean;\n  // persist?: boolean;\n}\n\ninterface ILoginAction {\n  type: \"login\" | \"logout\";\n  payload: { username: string; accessToken: string; isLoggedIn: boolean };\n}\n\ninterface IUserContext {\n  userState: ILoginState;\n  userDispatch: Dispatch<ILoginAction>;\n}\n\nexport const initialUserState: ILoginState = {\n  username: \"\",\n  accessToken: defaultAccessToken,\n  isLoggedIn: false,\n};\n\nexport const UserReducer = (state: ILoginState, action: ILoginAction) => {\n  let { username, accessToken, isLoggedIn } = action.payload;\n\n  switch (action.type) {\n    case \"login\":\n      return { username, accessToken, isLoggedIn };\n    case \"logout\":\n      return initialUserState;\n    default:\n      return state;\n  }\n};\n\nexport const UserContext = createContext<IUserContext>({\n  userState: initialUserState,\n  userDispatch: () => {},\n});\n\nexport const UserContextConsumer = UserContext.Consumer;\nexport const UserContextProvider = UserContext.Provider;\n","export interface IUser {\n  username: string;\n  email?: string;\n  phone?: number;\n  password: string;\n}\n\nexport const defaultUser: IUser = {\n  username: \"\",\n  email: \"\",\n  phone: 0,\n  password: \"\",\n};\n\nexport const defaultAccessToken = \"\";\n","import { toast } from \"react-toastify\";\nconst defaultPosition = toast.POSITION.BOTTOM_CENTER;\n\n/**\n * Show Toast\n *\n * Display toast\n *\n * @param {string} type message type, success/error\n * @param {string} msg toast message\n * @param {integer} autoClose auto close value in millisecond\n * @param {string} className toaster class name\n * @param {string} position toast position; ex-'top-right', 'top-center', 'top-left', 'bottom-right', 'bottom-center', 'bottom-left'\n */\n\nexport const showToast = (\n  type = \"success\",\n  msg: string,\n  autoClose = 2000,\n  className = \"primaryColor\",\n  position = defaultPosition\n) => {\n  if (type === \"success\") {\n    toast.success(msg, {\n      autoClose: autoClose === null ? 2000 : autoClose,\n      className: className === null ? \"primaryColor\" : className,\n      position: position,\n    });\n  } else if (type === \"error\") {\n    toast.error(msg, {\n      autoClose: autoClose === null ? 2000 : autoClose,\n      className: className === null ? \"dangerColor\" : className,\n      position: position,\n    });\n  }\n};\n\n// How to use react-toastify\n","import axios from \"axios\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../context/userContext\";\n\nconst baseUrl = `${process.env.REACT_APP_URL}`;\n\nconst useAxiosPrivate = () => {\n  const userContext = useContext(UserContext);\n  const axiosPrivate = axios.create({\n    baseURL: baseUrl,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `${userContext.userState.accessToken}`,\n    },\n    withCredentials: true,\n  });\n  return axiosPrivate;\n};\n\nexport default useAxiosPrivate;\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport FormControl from \"@mui/material/FormControl\";\nimport { useNavigate } from \"react-router-dom\";\nimport TextField from \"@mui/material/TextField\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport { showToast } from \"repository/utils\";\nimport { AxiosError } from \"axios\";\nimport useAxiosPrivate from \"api/axiosPrivate\";\nimport { IContactFormData } from \"interfaces/contact\";\n\nexport const ContactForm = () => {\n  const url = `${process.env.REACT_APP_URL}/contacts`;\n  const navigate = useNavigate();\n  const axiosInstance = useAxiosPrivate();\n\n  const handleFormSubmit = async (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const formData = new FormData(e.target);\n\n    try {\n      let resp = await axiosInstance.post(url, formData as IContactFormData);\n\n      if (resp) {\n        showToast(\"success\", `Contact will be added.`);\n\n        setTimeout(() => {\n          navigate(\"/list\");\n        }, 2000);\n      }\n    } catch (err) {\n      const error = err as AxiosError;\n      showToast(\"error\", error.message);\n    }\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      encType=\"multipart/form-data\"\n      onSubmit={handleFormSubmit}\n      style={{ margin: \"0 auto\", width: \"500px\", marginTop: \"100px\" }}\n    >\n      <FormControl required>\n        <TextField\n          type=\"text\"\n          id=\"Name\"\n          name=\"name\"\n          label=\"Name\"\n          placeholder=\"Name\"\n          maxRows=\"1\"\n          required\n          sx={{ marginBottom: 3 }}\n        />\n        <TextField\n          type=\"email\"\n          id=\"Email\"\n          name=\"email\"\n          label=\"Email\"\n          placeholder=\"Email\"\n          maxRows=\"1\"\n          required\n          sx={{ marginBottom: 3 }}\n        />\n        <TextField\n          type=\"tel\"\n          id=\"phone\"\n          name=\"phone\"\n          label=\"phone\"\n          placeholder=\"phone\"\n          maxRows=\"1\"\n          required\n          sx={{ marginBottom: 3 }}\n        />\n        <TextField\n          type=\"file\"\n          id=\"File\"\n          name=\"file\"\n          maxRows=\"1\"\n          required\n          sx={{ marginBottom: 3 }}\n        />\n        <TextField\n          type=\"message\"\n          id=\"Message\"\n          name=\"message\"\n          label=\"Message\"\n          placeholder=\"Message\"\n          sx={{ marginBottom: 3 }}\n          required\n          multiline\n        />\n\n        <Button type=\"submit\" variant=\"outlined\">\n          Submit\n        </Button>\n      </FormControl>\n      <ToastContainer />\n    </Box>\n  );\n};\n","import useAxiosPrivate from \"api/axiosPrivate\";\nimport MaterialTable, {\n  Column,\n  EditComponentProps,\n} from \"@material-table/core\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport { IContact, IContactFormData } from \"../interfaces/contact\";\nimport { showToast } from \"../repository/utils\";\n\nexport const ContactList = () => {\n  const url = `${process.env.REACT_APP_URL}/contacts`;\n  const axiosInstance = useAxiosPrivate();\n  const [data, setData] = useState<IContact[]>([]);\n  //const [_file, setFile] = useState<React.ReactNode>();\n\n  const columns: Array<Column<any>> = [\n    {\n      title: \"file\",\n      field: \"file\",\n\n      editComponent: (rowData: EditComponentProps<IContact>) => (\n        <div>\n          <img alt=\"\" id=\"input-img\" width=\"45\" />\n          <input\n            type=\"file\"\n            id=\"File\"\n            name=\"file\"\n            accept=\"image/*\"\n            onChange={(event: any) => {\n              try {\n                let inputTag = document.getElementById(\n                  \"File\"\n                ) as HTMLInputElement;\n                const file = event.target.files[0];\n                let imgTag = document.getElementById(\n                  \"input-img\"\n                ) as HTMLImageElement;\n\n                const reader = new FileReader();\n                reader.onloadend = () => {\n                  imgTag.src = `${reader.result}`;\n                  rowData.rowData.file = imgTag.src;\n                };\n                reader.readAsDataURL(file);\n\n                console.log(imgTag, inputTag, rowData.rowData.file);\n              } catch (err) {\n                console.log(err);\n              }\n            }}\n          />\n        </div>\n      ),\n      render: (rowData: IContact) => (\n        <img\n          src={\n            rowData.file.startsWith(\"data:image/\")\n              ? `${rowData.file}`\n              : `data:image/jpg;base64,${rowData.file}`\n          }\n          width=\"45\"\n          alt=\"contact\"\n        />\n      ),\n    },\n    {\n      title: \"name\",\n      field: \"name\",\n    },\n    {\n      title: \"email\",\n      field: \"email\",\n    },\n    {\n      title: \"phone\",\n      field: \"phone\",\n    },\n    {\n      title: \"message\",\n      field: \"message\",\n    },\n  ];\n\n  const getData = useCallback(async () => {\n    let fetchedDataReq = await axiosInstance.get(url);\n\n    if (fetchedDataReq) {\n      let fetchedData = await fetchedDataReq[\"data\"];\n      console.log(fetchedData);\n      setData(fetchedData.reverse());\n    } else {\n      console.log(\"Error while getting data\");\n    }\n  }, [url]);\n\n  useEffect(() => {\n    getData();\n  }, [getData]);\n\n  const onAdd = async (newData: IContactFormData) => {\n    try {\n      if (newData.name.length > 2) {\n        if (\n          newData.email.match(/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/)\n        ) {\n          if (newData.message.length > 4) {\n            if (newData.phone.toString().length > 5) {\n              let resp = await axiosInstance.post(url, newData);\n\n              if (resp) {\n                showToast(\"success\", `${newData.name} was added `);\n                return await getData();\n              }\n            } else {\n              showToast(\"error\", \"phone must be at least 5 characters\");\n            }\n          } else {\n            showToast(\"error\", \"Message must be at least 4 characters\");\n          }\n        } else {\n          showToast(\"error\", 'Email must include \"@\"');\n        }\n      } else {\n        showToast(\"error\", \"Name bust be longer than 2 characters\");\n      }\n    } catch {\n      showToast(\"error\", `${newData.name} was not added`);\n    }\n  };\n\n  const onUpdate = async (newData: IContact, oldData: any) => {\n    try {\n      if (newData.name.length > 2) {\n        if (\n          newData.email.match(/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/)\n        ) {\n          if (newData.phone.toString().length > 5) {\n            if (newData.message.length > 4) {\n              let resp = await axiosInstance.put(\n                url + \"/\" + oldData._id,\n                newData as IContact\n              );\n              if (resp) {\n                await getData();\n                showToast(\"success\", `${newData.name} was updated `);\n              }\n            } else {\n              showToast(\"error\", \"Message must be at least 4 characters\");\n            }\n          } else {\n            showToast(\"error\", \"Phone must be at least 5 characters\");\n          }\n        } else {\n          showToast(\"error\", \"A proper mail must be given\");\n        }\n      } else {\n        showToast(\"error\", \"Name must be longer than 2 characters\");\n      }\n    } catch {\n      showToast(\"error\", `${oldData.name} was not updated`);\n    }\n  };\n\n  const onDelete = async (contact: IContact) => {\n    try {\n      let resp = await axiosInstance.delete(url + \"/\" + contact._id);\n\n      if (resp) {\n        showToast(\"success\", `${contact.name} was deleted`);\n        await getData();\n      }\n    } catch {\n      showToast(\"error\", `${contact.name} was not deleted`);\n    }\n  };\n\n  return (\n    <div>\n      <MaterialTable\n        title=\"Contact List\"\n        columns={columns}\n        data={data}\n        options={{ actionsColumnIndex: -1, addRowPosition: \"first\" }}\n        editable={{\n          onRowAdd: onAdd,\n          onRowUpdate: onUpdate,\n          onRowDelete: onDelete,\n        }}\n      />\n      <ToastContainer />\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { styled, useTheme } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Drawer from \"@mui/material/Drawer\";\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport List from \"@mui/material/List\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Button from \"@mui/material/Button\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport InboxIcon from \"@mui/icons-material/MoveToInbox\";\nimport { ToastContainer } from \"react-toastify\";\nimport { showToast } from \"repository/utils\";\nimport { UserContext } from \"context/userContext\";\nimport { useContext } from \"react\";\n\nconst drawerWidth = 240;\n\nconst Main = styled(\"main\", { shouldForwardProp: (prop) => prop !== \"open\" })<{\n  open?: boolean;\n}>(({ theme, open }) => ({\n  flexGrow: 1,\n  padding: theme.spacing(3),\n  transition: theme.transitions.create(\"margin\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  marginLeft: `-${drawerWidth}px`,\n  ...(open && {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  }),\n}));\n\ninterface AppBarProps extends MuiAppBarProps {\n  open?: boolean;\n}\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})<AppBarProps>(({ theme, open }) => ({\n  transition: theme.transitions.create([\"margin\", \"width\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: `${drawerWidth}px`,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n  justifyContent: \"flex-end\",\n}));\n\nexport default function ContactManagerApp() {\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const userContext = useContext(UserContext);\n\n  const Logout = () => {\n    showToast(\"success\", \"You are logged out\");\n    setTimeout(() => {\n      userContext.userDispatch({\n        type: \"logout\",\n        payload: {\n          username: \"\",\n          accessToken: \"\",\n          isLoggedIn: false,\n        },\n      });\n    }, 2000);\n  };\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  return (\n    <>\n      <Box sx={{ display: \"flex\" }}>\n        <CssBaseline />\n        <AppBar position=\"fixed\" open={open}>\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              sx={{\n                marginRight: \"36px\",\n                ...(open && { display: \"none\" }),\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              variant=\"h6\"\n              noWrap\n              component=\"div\"\n              sx={{ flexGrow: 1 }}\n            >\n              Contact Manager\n            </Typography>\n\n            <Button color=\"inherit\" onClick={Logout}>\n              Log Out\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          sx={{\n            width: drawerWidth,\n            flexShrink: 0,\n            \"& .MuiDrawer-paper\": {\n              width: drawerWidth,\n              boxSizing: \"border-box\",\n            },\n          }}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n        >\n          <DrawerHeader>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === \"rtl\" ? (\n                <ChevronRightIcon />\n              ) : (\n                <ChevronLeftIcon />\n              )}\n            </IconButton>\n          </DrawerHeader>\n          <Divider />\n          <List>\n            <ListItem component={Link} to=\"/form\" key=\"formItem\">\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Contact Form\" />\n            </ListItem>\n            <ListItem component={Link} to=\"/list\" key=\"listItem\">\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Contact List\" />\n            </ListItem>\n          </List>\n        </Drawer>\n\n        <Main open={open}>\n          <DrawerHeader />\n        </Main>\n      </Box>\n      <ToastContainer />\n    </>\n  );\n}\n","import axios from \"axios\";\n\nconst baseUrl = `${process.env.REACT_APP_URL}`;\n\nconst axiosPublic = axios.create({\n  baseURL: baseUrl,\n  headers: { \"Content-Type\": \"application/json\" },\n});\n\nexport default axiosPublic;\n","import Button from \"@mui/material/Button\";\nimport FormControl from \"@mui/material/FormControl\";\nimport { useNavigate } from \"react-router-dom\";\nimport TextField from \"@mui/material/TextField\";\nimport { ToastContainer } from \"react-toastify\";\nimport { showToast } from \"repository/utils\";\nimport axiosPublic from \"api/axiosPublic\";\nimport React, { useContext } from \"react\";\nimport { UserContext } from \"../context/userContext\";\nimport { AxiosError } from \"axios\";\n\nconst url = `${process.env.REACT_APP_URL}/users`;\n\nconst Login = () => {\n  const userContext = useContext(UserContext);\n  const navigate = useNavigate();\n\n  const handleLogin = async (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const formData = new FormData(form);\n    let postFormData = {} as any;\n    formData.forEach((value, key) => {\n      postFormData[key] = value;\n    });\n\n    try {\n      let resp = await axiosPublic.post(`${url}/login`, {\n        username: postFormData.username,\n        password: postFormData.password,\n      });\n\n      if (resp) {\n        userContext.userDispatch({\n          type: \"login\",\n          payload: {\n            username: resp.data.username,\n            accessToken: resp.data.token,\n            isLoggedIn: true,\n          },\n        });\n\n        showToast(\"success\", \"You are logged in\");\n        setTimeout(() => {\n          navigate(\"/contactManagerApp\");\n        }, 1000);\n      }\n    } catch (err) {\n      const error = err as AxiosError;\n      showToast(\"error\", error.message);\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleLogin}>\n        <FormControl required>\n          <TextField\n            type=\"text\"\n            label=\"username\"\n            id=\"Username\"\n            name=\"username\"\n            placeholder=\"Name\"\n            maxRows=\"1\"\n            required\n            sx={{ marginBottom: 3 }}\n            autoComplete=\"off\"\n          />\n          <TextField\n            type=\"password\"\n            label=\"password\"\n            id=\"Password\"\n            name=\"password\"\n            placeholder=\"password\"\n            maxRows=\"1\"\n            required\n            sx={{ marginBottom: 3 }}\n            autoComplete=\"off\"\n          />{\" \"}\n          <span>\n            <Button type=\"submit\">Login</Button>\n          </span>\n        </FormControl>\n      </form>\n      <ToastContainer />\n    </>\n  );\n};\nexport default Login;\n","import Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { Link } from \"react-router-dom\";\n\nimport Login from \"../components/Login\";\n\nconst imageURL = process.env.REACT_APP_IMAGE_URL;\n\nexport default function LaunchCard() {\n  return (\n    <Card /* sx={{ maxWidth: 345 }} */>\n      <CardMedia component=\"img\" height=\"140\" image={imageURL} />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\n          Contact Manager\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          Welcome to the \"Contact-Manager\". If you are not already registered\n          please\n          <Button\n            component={Link}\n            to=\"/register\"\n            style={{ textTransform: \"none\", fontSize: \"1.2rem\" }}\n          >\n            register!\n          </Button>\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Login />\n        <br />\n\n        <br />\n      </CardActions>\n    </Card>\n  );\n}\n","import { AxiosError } from \"axios\";\nimport Button from \"@mui/material/Button\";\nimport FormControl from \"@mui/material/FormControl\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport TextField from \"@mui/material/TextField\";\nimport { ToastContainer } from \"react-toastify\";\nimport { IUser } from \"../interfaces/user\";\nimport { showToast } from \"../repository/utils\";\nimport axiosPublic from \"../api/axiosPublic\";\n\nconst url = `${process.env.REACT_APP_URL}/users`;\n\ntype StateType = {\n  path: string;\n};\n\nconst Register = () => {\n  const navigate = useNavigate();\n  const { state } = useLocation();\n\n  const handleRegister = async (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const formData = new FormData(e.currentTarget);\n\n    let postData = {} as any;\n    formData.forEach((value, key) => {\n      postData[key] = value;\n    });\n\n    if (postData.confirmPassword !== postData.password) {\n      showToast(\"error\", \"password don't match\");\n    }\n    try {\n      let resp = await axiosPublic.post(`${url}/register`, postData as IUser);\n      if (resp.status === 200) {\n        showToast(\"success\", `${postData[\"username\"]} is registered.`);\n        setTimeout(() => {\n          navigate((state as StateType)?.path || \"/login\");\n        }, 2000);\n      } else {\n        showToast(\"error\", \"username already exists\");\n      }\n    } catch (err) {\n      const error = err as Error | AxiosError;\n      showToast(\"error\", error.message);\n    }\n  };\n  return (\n    <>\n      <form\n        onSubmit={handleRegister}\n        style={{ margin: \"0 auto\", width: \"220px\", marginTop: \"100px\" }}\n      >\n        <FormControl required>\n          <TextField\n            label=\"username\"\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            placeholder=\"Name\"\n            maxRows=\"1\"\n            required\n            sx={{ marginBottom: 3 }}\n          />\n          <TextField\n            label=\"email\"\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            maxRows=\"1\"\n            required\n            sx={{ marginBottom: 3 }}\n          />\n          <TextField\n            label=\"phone\"\n            type=\"tel\"\n            id=\"phone\"\n            name=\"phone\"\n            placeholder=\"Phone\"\n            maxRows=\"1\"\n            required\n            sx={{ marginBottom: 3 }}\n          />\n          <TextField\n            label=\"password\"\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"password\"\n            maxRows=\"1\"\n            required\n            sx={{ marginBottom: 3 }}\n          />\n          <TextField\n            label=\"confirm password\"\n            type=\"password\"\n            id=\"confirm-password\"\n            name=\"confirmPassword\"\n            placeholder=\"confirm password\"\n            maxRows=\"1\"\n            required\n            sx={{ marginBottom: 3 }}\n          />\n          <span>\n            <Button type=\"submit\" id=\"submit\">\n              Register\n            </Button>\n          </span>\n        </FormControl>\n      </form>\n      <ToastContainer />\n    </>\n  );\n};\nexport default Register;\n","import React, { useContext } from \"react\";\nimport { Navigate, useLocation } from \"react-router-dom\";\nimport { UserContext } from \"../context/userContext\";\n\nexport interface IAuthRouteProps {\n  children: React.ReactNode;\n}\n\nconst AuthRoute = (props: IAuthRouteProps) => {\n  const userContext = useContext(UserContext);\n  const location = useLocation();\n  const { children } = props;\n  return userContext.userState.accessToken !== \"\" ? (\n    <>{children}</>\n  ) : (\n    <Navigate to=\"/\" state={{ from: location }} replace />\n  );\n};\n\nexport default AuthRoute;\n","import { useReducer } from \"react\";\nimport { Routes, Route, BrowserRouter, HashRouter } from \"react-router-dom\";\nimport {\n  initialUserState,\n  UserContextProvider,\n  UserReducer,\n} from \"./context/userContext\";\nimport { ContactForm } from \"./pages/ContactForm\";\nimport { ContactList } from \"./pages/ContactList\";\nimport ContactManagerApp from \"./pages/ContactManagerApp\";\nimport LaunchCard from \"./pages/LaunchCard\";\nimport Register from \"./pages/Register\";\nimport AuthRoute from \"./components/AuthRoute\";\n\nconst App = () => {\n  const [userState, userDispatch] = useReducer(UserReducer, initialUserState);\n  return (\n    <UserContextProvider value={{ userState, userDispatch }}>\n      <HashRouter>\n        <Routes>\n          {/* Public Routes */}\n          <Route path=\"/\" element={<LaunchCard />} />\n          <Route path=\"/register\" element={<Register />} />\n          <Route path=\"*\" element={<LaunchCard />} />\n\n          {/* Private Routes */}\n          <Route\n            path=\"/contactManagerApp\"\n            element={\n              <AuthRoute>\n                <ContactManagerApp />\n              </AuthRoute>\n            }\n          />\n\n          <Route\n            path=\"/form\"\n            element={\n              <AuthRoute>\n                <ContactForm />\n              </AuthRoute>\n            }\n          />\n\n          <Route\n            path=\"/list\"\n            element={\n              <AuthRoute>\n                <ContactList />\n              </AuthRoute>\n            }\n          />\n        </Routes>\n      </HashRouter>\n    </UserContextProvider>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"react-toastify/dist/ReactToastify.css\";\nrequire(\"dotenv\").config();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}